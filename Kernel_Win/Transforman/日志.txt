2012/9/10
增加dump机制 初步测试没有问题,后期须大量测试
增加Nedmalloc 初步测试没有问题,后期须大量测试
更改项目命名为Transforman 意义为可扩展变化多的服务器框架.
下一步要做的是理清楚对socket的管理和如何识别连接进来的peer是什么类型.
要把所有都规划好,可能需要的需求都考虑到位,当然不能失去灵活性.毕竟该项目的存在价值就是灵活
2012/9/11
增加VLD内存泄漏检测工具,编译通过,调试未通过,程序不能正常结束.还在查问题所在
VLD内存泄漏检测增加,编译通过,测试也没问题,只是vld这个工具记录堆栈信息太多,带来的开销太大
2012/9/20
完善Buff容器,和VarList参数容器;
继续编写CallBackSystem,初步完成.可以开始调试
下一步开始研究DLL模块的加载和运行.
消息回调机制完成,下一步开始研究DLL的加载和运行.
2012/9/21
dll模块加载初步实现,接下来就是整体的完整和规划,以及对象管理机制的完成.
2012/9/23
dll模块加载编码完成
整理整体目录结构
修改Transforman项目工作目录为$(SolutionDir)..\$(ConfigurationName)
修改Transforman项目的输出目录和中间目录为$(SolutionDir)..\$(ConfigurationName)
移动一些逻辑层需要用到的公用文件到工程目录的父级目录下的Public文件夹中
修改nedmalloc项目的输出目录和中间目录为$(SolutionDir)\..\Library\NedmallocLib
将配置文件移动到工程目录的父级目录下的Config文件夹中
将DLL模块移动到工程目录的父级目录下的Modules文件夹中
做了如下修改后 发现内存池nedmalloc 编译不通过 问题还在查询中
2012/9/24
23号整理目录所导致的问题已经查出,第一是nedmalloc的命名空间问题,如果定义了使用命名空间的宏,则会在编译器出错(怎么出现的我就蛋疼了,没查出来,也不知道为什么跟路径有关系)
第二lib没有正确加载到,导致出错,vs所带的项目附加包含目录对#pragma comment这个指令是无效的,包含静态库时还是需要给出正确路径.
2012/9/26
修复VarList参数容器的bug,在AllocSpace()中,分配新的内存空间出错.
修改Archive,修改了记录长度所占位数(由原来的2字节改成了4字节,2字节不够用)
找到了Archive的两个bug,在字符串入流和宽字符串入流操作是,少申请了内存,导致测试时用大数据测试出现内存被破坏的错误.(在内存申请和操作的时候要谨慎啊,不然会死的很惨)
如何在开发阶段解决内存越界的问题,这个需要想办法思考,现在知道的几个方法,太耗内存了,申请的内存前后加标识,这很蛋疼啊,而且发布版要用nedmalloc内存池,也不知道怎么融合这两个库.
2012/9/26
写下目前想到的需要完善的东西
首先增加连接端管理器.需求分析需要好好整理
其次(以下在国庆期间完成)
第一增加控制台特性.通过telnet连接来作为控制台命令入口.
第二增加日志功能.
第三完善IOCP模块,目前很乱.
第四完善IKernel接口和Kernel模块
第五整体查一遍内存泄漏,内存越界这种问题.东西太多写的大脑开始发糊涂了....
2012/9/28
重构IOCP模块和连接池,这两个地方太乱了.端管理是否需要.是融合到连接池里面还是独立出来.这里还没想好.准备到网上查查资料.
连接池里面的sock应该只跟连接绑定,listen不应该算在其内,所以用于listen的sock独立出来,不需要管理.但是这里涉及到内存回收,listen所花的内存开销该如何处理?
或者listen直接就不需要内存开销.
上面的内存开销问题.这里的AcceptEx跟第一次read绑定,在新的连接到来并且第一次接到buff后,GetQueuedCompletionStatus才会返回所以这里的overlappedplus所需的内存开销
还是需要的,至于回收会在断开连接,或者连接出错主动断开的时候回收.